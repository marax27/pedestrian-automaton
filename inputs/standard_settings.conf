# Static field
# Value of a single cell:
# S = (max-min) * exp(-static_decay * min_distance) + min

# Static decay constant: used in calculating attractiveness
# of cells (static field). The greater the constant, the faster
# the attractiveness drops when far from an exit.
static_decay: 0.35

# Max. value of static field.
max: 13.5

# Min. value of free cells of static field - keep in mind
# that, i.e. walls are fixed on 0.
min: 0.0001

# Static strength: connected to coupling strength of static field.
static_strength: 1.0

# Neighbourhood type: 
#      X         XXX
#     XOX        XOX
#      X         XXX
# von_neumann   moore
neighbourhood: moore

# Dynamic field
# d_ij = raw dynamic field
# D_ij = dynamicValue(d_ij); used in computing probabilities

# Values used to compute 'usable' D_ij.
dynamic_usable_decay: 0.88
dynamic_usable_max: 1.31

# When pedestrian enters (i,j): d_ij += dynamic_step
dynamic_step: 1.19

# Dynamic decay: d_ij -= dynamic_decay * d_ij
dynamic_decay: 0.25

# Diffusion: Neighbour of d_ij += diffusion * dynamic_decay * d_ij
diffusion: 0.025

# Dynamic strength: connected to coupling strength of dynamic field.
# Used to compute usable D_ij.
dynamic_strength: 2.21
